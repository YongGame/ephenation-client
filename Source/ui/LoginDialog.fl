# data file for the Fltk User Interface Designer (fluid)
version 1.0110
header_name {.h}
code_name {.cpp}
class LoginDialog {open
} {
  Function {Init(const char *email, const char *license, bool allowTest)} {open
  } {
    Fl_Window fWindow {
      label {Ephenation login} open
      xywh {527 193 605 545} type Single
      code0 {\#include <stdio.h>}
      code1 {\#include <stdlib.h>}
      code2 {\#include "../client_prot.h"} visible
    } {
      Fl_Box {} {
        image {logotype60percent.jpg} xywh {220 73 155 42}
      }
      Fl_Input fEmail {
        label {Email:}
        private xywh {180 200 248 25}
        code0 {fEmail->value(email);}
      }
      Fl_Input fPassword {
        label {Password:} selected
        private xywh {180 251 248 25} type Secret
      }
      Fl_Input fLicenseKey {
        label {License key:}
        private xywh {180 303 248 25}
        code0 {fLicenseKey->value(license);}
      }
      Fl_Output fVersion {
        label {Ephenation version:}
        xywh {170 370 80 25} color 49
      }
      Fl_Output fProtocol {
        label {Protocol version:}
        xywh {400 370 80 25} color 49
      }
      Fl_Output fMessage {
        xywh {200 515 220 25} box FLAT_BOX color 49 textsize 18 textcolor 80
        code0 {\#include "../connection.h"}
      }
      Fl_Button {} {
        label Test
        callback {fTesting=true;
fWindow->hide();}
        xywh {118 431 85 25}
        code0 {if (!allowTest) o->hide();}
      }
      Fl_Button {} {
        label {Help...}
        callback {new HelpDialog;}
        xywh {274 431 85 25}
        code0 {\#include "HelpDialog.h"}
      }
      Fl_Button {} {
        label {Credits...}
        callback {CreditScreen *p = new CreditScreen;
p->Show();}
        xywh {430 431 85 25}
        code0 {\#include "Credits.h"}
      }
      Fl_Return_Button {} {
        label Ok
        callback {fWindow->hide();
fFullLogin = true;}
        xywh {118 481 85 25}
      }
      Fl_Button {} {
        label Cancel
        callback {fWindow->hide();}
        xywh {430 481 85 25}
      }
      Fl_Button {} {
        label {Options...}
        callback {OptionsDialog *p = new OptionsDialog();
p->fGraphicsTab->activate();
Options::sfSave.ListGraphicModes(p);}
        xywh {274 481 85 25}
        code0 {\#include "OptionsDialog.h"}
        code1 {\#include "../Options.h"}
      }
    }
  }
  Function {show(int vMajor, int vMinor)} {open
  } {
    code {char buff[100];
\#ifdef WIN32
_snprintf(buff, sizeof buff, "%d.%d", vMajor, vMinor);
\#else
snprintf(buff, sizeof buff, "%d.%d", vMajor, vMinor);
\#endif
fVersion->value(buff);
\#ifdef WIN32
_snprintf(buff, sizeof buff, "%d.%d", PROT_VER_MAJOR, PROT_VER_MINOR);
\#else
snprintf(buff, sizeof buff, "%d.%d", PROT_VER_MAJOR, PROT_VER_MINOR);
\#endif
fProtocol->value(buff);
if (gClientAvailMajor != vMajor || gClientAvailMinor != vMinor) {
    \#ifdef WIN32
    _snprintf(buff, sizeof buff, "New client available: %d.%d", gClientAvailMajor, gClientAvailMinor);
    \#else
    snprintf(buff, sizeof buff, "New client available: %d.%d", gClientAvailMajor, gClientAvailMinor);
    \#endif
    fMessage->value(buff);
}

fWindow->show();} {}
  }
  Function {Email() const} {open return_type {const char *}
  } {
    code {return fEmail->value();} {}
  }
  Function {Password() const} {open return_type {const char *}
  } {
    code {return fPassword->value();} {}
  }
  Function {LicenseKey() const} {open return_type {const char *}
  } {
    code {return fLicenseKey->value();} {}
  }
  Function {LoginDialog()} {open
  } {
    code {fWindow = 0;
fTesting = false;
fFullLogin = false;} {}
  }
  Function {~LoginDialog()} {open
  } {
    code {delete fWindow;
fWindow = 0; // Not necessary, but good practise
fTesting = 0;} {}
  }
  decl {bool fTesting; // Use a login with test name, no password} {public
  }
  decl {bool fFullLogin;} {public
  }
}
