// generated by Fast Light User Interface Designer (fluid) version 1.0110

#include "HelpDialog.h"

void HelpDialog::cb_Close_i(Fl_Return_Button*, void*) {
  fWindow->hide();
Fl::delete_widget(fWindow);
}
void HelpDialog::cb_Close(Fl_Return_Button* o, void* v) {
  ((HelpDialog*)(o->parent()->user_data()))->cb_Close_i(o,v);
}

HelpDialog::HelpDialog() {
  { fWindow = new Fl_Window(565, 645, "Ephenation help");
    fWindow->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(310, 15, 10, 15, "Ephenation Help");
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelsize(20);
      o->align(FL_ALIGN_LEFT);
      o->end();
    } // Fl_Group* o
    { Fl_Output* o = new Fl_Output(140, 95, 240, 25, "Home page:");
      o->color((Fl_Color)FL_BACKGROUND_COLOR);
      o->value("http://www.ephenation.net");
    } // Fl_Output* o
    { Fl_Tabs* o = new Fl_Tabs(50, 148, 465, 435);
      { Fl_Group* o = new Fl_Group(75, 156, 340, 399, "Keys");
        { Fl_Input* o = new Fl_Input(260, 156, 135, 25, "Run forward:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("W");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(260, 192, 135, 25, "Run backward:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("S");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(260, 229, 135, 25, "Strafe left:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("A");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(260, 266, 135, 25, "Strafe right:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("D");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(260, 303, 135, 25, "Jump or climb ladder:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("SPACE");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(260, 340, 135, 25, "Select next monster:");
          o->tooltip("A monster must be selected before you can attack. A selected monster is shown\
 with a red colour.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("TAB");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(260, 377, 135, 25, "Toggle map:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("M");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(260, 414, 135, 25, "Change viewing distance:");
          o->tooltip("A longer viewing distance enables you to see longer, but can slow down the di\
splay.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("+/-");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(261, 451, 134, 25, "Examine inventory:");
          o->tooltip("Toggle inventory screen.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("i");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(261, 488, 134, 25, "Use item:");
          o->tooltip("Some items in the inventory have a quick key to use them.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("F1 - F12");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(260, 525, 135, 25, "Third person view:");
          o->tooltip("Using mouse wheel will change the camera distance for the third person view.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("Mouse scroll");
        } // Fl_Input* o
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(75, 168, 205, 105, "Combat");
        o->hide();
        { Fl_Input* o = new Fl_Input(170, 168, 75, 25, "Autoattack:");
          o->tooltip("You will not do any damage to the monstrer until the autoattack has been init\
iated. The attack will continue by itself. It costs no mana.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("1");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(170, 210, 75, 25, "Heal self:");
          o->tooltip("Use some mana to heal self.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("2");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(170, 248, 75, 25, "Extra attack:");
          o->tooltip("This attack costs some mana, but will add extra damage.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("3");
        } // Fl_Input* o
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(75, 161, 415, 397, "Commands");
        o->hide();
        { Fl_Input* o = new Fl_Input(257, 161, 218, 25, "Communicate:");
          o->tooltip("Send a message to everyone near.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/say [msg]");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(257, 196, 218, 25, "Define home spawnpoint:");
          o->tooltip("When you have a territory of your own, you can define a point to which it is \
possible to teleport.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/sethome");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(257, 231, 218, 25, "Reset to start pos:");
          o->tooltip("Use this command if you get stuck somewhere.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/resetpos");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(257, 267, 218, 25, "Show allocated territory:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/territory show");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(257, 302, 218, 25, "Claim territory:");
          o->tooltip("This will allocate the chunk you are in. With the \'up\' or \'down\' argument\
, the chunk above or below will be allcoated instead. \'north\', \'east\', \'s\
outh\' and \'west\' can also be used.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/territory claim [up/down]");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(257, 338, 218, 25, "Tell someone:");
          o->tooltip("A private in-game message is sent to the specified player.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/tell [player] [msg]");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(255, 373, 220, 25, "Teleport home:");
          o->tooltip("You teleport instantly to the place defined as home with the /home command.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/home");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(255, 408, 220, 25, "Add friend:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/friend add [name]");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(255, 444, 220, 25, "Remove friend:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/friend remove [name]");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(255, 479, 220, 25, "Revive when dead:");
          o->tooltip("This is the only way to become alive again.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/revive");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(255, 515, 220, 25, "Show keys:");
          o->tooltip("Show what keys you have in your inventory.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("/keys");
        } // Fl_Input* o
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(75, 168, 320, 310, "Admin");
        o->hide();
        { Fl_Input* o = new Fl_Input(285, 168, 110, 25, "Shutdown server:");
          o->color((Fl_Color)FL_LIGHT1);
          o->deactivate();
          o->value("/shutdown");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(285, 205, 110, 25, "Toggle flying mode:");
          o->color((Fl_Color)FL_LIGHT1);
          o->deactivate();
          o->value("/flying");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(285, 243, 110, 25, "General status:");
          o->color((Fl_Color)FL_LIGHT1);
          o->deactivate();
          o->value("/status");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(285, 281, 110, 25, "CPU load:");
          o->color((Fl_Color)FL_LIGHT1);
          o->deactivate();
          o->value("/timers");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(285, 319, 110, 25, "Mutex synch assessment:");
          o->color((Fl_Color)FL_LIGHT1);
          o->deactivate();
          o->value("/evalsync");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(285, 357, 110, 25, "List of players:");
          o->color((Fl_Color)FL_LIGHT1);
          o->deactivate();
          o->value("/players");
        } // Fl_Input* o
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(75, 173, 360, 360, "Construction mode");
        o->hide();
        { Fl_Input* o = new Fl_Input(245, 183, 130, 25, "Toggle construction mode:");
          o->tooltip("Use mouse wheel to select building block.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("C");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(245, 223, 130, 25, "Remove block:");
          o->tooltip("The block pointed at by the mouse is deleted.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("DEL/V");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(245, 258, 130, 25, "Add block:");
          o->tooltip("A block of the selected type is added to the surface selected by the mouse.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("b");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(245, 298, 130, 25, "Select block type:");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("Mouse wheel");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(245, 333, 130, 25, "View 3D grid:");
          o->tooltip("See through walls.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("ALT");
        } // Fl_Input* o
        { Fl_Input* o = new Fl_Input(245, 369, 130, 25, "Continuous excavation:");
          o->tooltip("This will delete blocks continuously.");
          o->color((Fl_Color)FL_BACKGROUND_COLOR);
          o->deactivate();
          o->value("DEL + mouse 1");
        } // Fl_Input* o
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Tabs* o
    { Fl_Text_Display* o = new Fl_Text_Display(200, 55, 50, 15, "Press Esc to close Help page");
      o->box(FL_NO_BOX);
      o->labelfont(2);
    } // Fl_Text_Display* o
    { Fl_Return_Button* o = new Fl_Return_Button(55, 600, 100, 20, "Close");
      o->callback((Fl_Callback*)cb_Close);
    } // Fl_Return_Button* o
    fWindow->set_modal();
    fWindow->end();
  } // Fl_Window* fWindow
  fWindow->show();
}
