// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "Error.h"

void ErrorDialog::cb_Exit_i(Fl_Return_Button*, void*) {
  fWindow->hide();
exit(0);
}
void ErrorDialog::cb_Exit(Fl_Return_Button* o, void* v) {
  ((ErrorDialog*)(o->parent()->user_data()))->cb_Exit_i(o,v);
}

ErrorDialog::ErrorDialog(const char *fmt, ...) {
  va_list vl;
  va_start(vl, fmt);
  char buff[1000];
  #ifdef WIN32
  _vsnprintf(buff, sizeof buff, fmt, vl);
  #else
  vsnprintf(buff, sizeof buff, fmt, vl);
  #endif
  { fWindow = new Fl_Window(625, 255, "Ephenation error");
    fWindow->user_data((void*)(this));
    { Fl_Output* o = new Fl_Output(10, 15, 595, 125);
      o->type(12);
      o->labeltype(FL_NO_LABEL);
      o->align(Fl_Align(132));
      o->value(buff);
    } // Fl_Output* o
    { Fl_Return_Button* o = new Fl_Return_Button(10, 215, 80, 20, "Exit");
      o->callback((Fl_Callback*)cb_Exit);
    } // Fl_Return_Button* o
    fWindow->set_modal();
    fWindow->end();
  } // Fl_Window* fWindow
  if (gMode.Get() == GameMode::GAME)
  	glfwTerminate();
  fWindow->show();Fl::run();Fl::flush();
}
