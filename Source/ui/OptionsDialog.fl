# data file for the Fltk User Interface Designer (fluid)
version 1.0300
header_name {.h}
code_name {.cpp}
class OptionsDialog {open
} {
  Function {OptionsDialog()} {open
  } {
    Fl_Window fWindow {open selected
      xywh {503 244 415 365} type Double
      code0 {\#include "../Options.h"} modal visible
    } {
      Fl_Group {} {
        label Options open
        xywh {133 5 15 15} labeltype ENGRAVED_LABEL labelsize 20 align 8
      } {}
      Fl_Tabs {} {open
        xywh {25 25 360 285}
      } {
        Fl_Group {} {
          label Miscellaneous open
          xywh {35 45 85 265}
        } {
          Fl_Check_Button fMusic {
            label {Enable music}
            callback {gSoundControl.SwitchMusicStatus();
Options::sfSave.fMusicOn = fMusic->value();}
            tooltip {Enable or disable music.} xywh {35 60 70 30} down_box DOWN_BOX
            code0 {\#include "../SoundControl.h"}
            code1 {fMusic->value(Options::sfSave.fMusicOn);}
          }
          Fl_Check_Button fPing {
            label {Show ping}
            callback {gShowPing = fPing->value();}
            tooltip {Used to measure response time from server. This will add traffic, don't leave it on for ever.} xywh {35 84 70 30} down_box DOWN_BOX
            code0 {\#include "../primitives.h"}
          }
        }
        Fl_Group fGraphicsTab {
          label Graphics open
          xywh {25 50 340 250} hide deactivate
        } {
          Fl_Slider fPerformanceSlider {
            label Performance
            tooltip {The general performance of your system. A high value will show better graphics but at a lower FPS. If you change this value, it will override some other parameters.} xywh {55 54 45 111} minimum 1 maximum 4 step 1 value 1 slider_size 0.25
            code0 {fPerformanceSlider->value(Options::sfSave.fPerformance);}
          }
          Fl_Group {} {
            label Low open
            xywh {110 78 15 15} align 5
          } {}
          Fl_Group {} {
            label Medium open
            xywh {110 105 15 15} align 5
          } {}
          Fl_Group {} {
            label High open
            xywh {110 132 15 15} align 5
          } {}
          Fl_Group {} {
            label Super open
            xywh {110 160 15 15} align 5
          } {}
          Fl_Choice fGraphicMode {
            label {Mode:} open
            xywh {85 225 105 20} down_box BORDER_BOX
          } {}
          Fl_Group {} {
            label {Only change from start dialog} open
            xywh {105 285 15 15} align 5
          } {}
          Fl_Check_Button fFullScreenMode {
            label {Full screen}
            xywh {225 225 64 15} down_box DOWN_BOX
          }
          Fl_Value_Slider fAmbientLight {
            label {Ambient light}
            tooltip {The amount of ambient light in dark areas.} xywh {200 55 150 20} type Horizontal maximum 100 step 1 value 25 slider_size 0.121212 textsize 14
            code0 {fAmbientLight->value(Options::sfSave.fAmbientLight);}
          }
          Fl_Check_Button fSmoothTerrain {
            label {Smooth terrain}
            tooltip {Show the world smooth instead of blocky. Depends on CPU performance, not graphics.} xywh {215 107 64 15} down_box DOWN_BOX
            code0 {fSmoothTerrain->value(Options::sfSave.fSmoothTerrain);}
          }
          Fl_Check_Button fMergeNormals {
            label {Merge normals}
            tooltip {If showing the world as smooth, this option will enhance it further. Depends on CPU, not on graphics.} xywh {215 132 64 15} down_box DOWN_BOX
            code0 {fMergeNormals->value(Options::sfSave.fMergeNormals);}
          }
          Fl_Check_Button fAddNoise {
            label {Add noise to terrain}
            tooltip {If showing the world as smooth, this option will add some random height to get variation. Depends on CPU performance.} xywh {215 157 64 15} down_box DOWN_BOX
            code0 {fAddNoise->value(Options::sfSave.fAddNoise);}
          }
          Fl_Check_Button fDynamicShadows {
            label {Dynamic shadows}
            tooltip {Draw realistic shadows.} xywh {215 182 64 15} down_box DOWN_BOX
            code0 {fDynamicShadows->value(Options::sfSave.fDynamicShadows);}
          }
        }
      }
      Fl_Return_Button {} {
        label Ok
        callback {Options::sfSave.UpdateSettings(this);
fWindow->hide();
Fl::delete_widget(fWindow);}
        xywh {30 320 72 20}
      }
      Fl_Button {} {
        label {Help...}
        callback {new HelpDialog;}
        xywh {121 320 70 20}
        code0 {\#include "HelpDialog.h"}
      }
      Fl_Button {} {
        label {Quit game}
        callback {fWindow->hide();
Fl::delete_widget(fWindow);
if (gMode.Get() == GameMode::GAME) {
	glfwCloseWindow();
} else {
	exit(0);
}}
        xywh {202 320 90 20}
        code0 {\#include <GL/glfw.h>}
        code1 {\#include <stdlib.h>}
        code2 {\#include "../modes.h"}
      }
      Fl_Button {} {
        label Cancel
        callback {fWindow->hide();
Fl::delete_widget(fWindow);}
        xywh {305 320 64 20}
      }
    }
    code {fWindow->show();} {}
  }
}
