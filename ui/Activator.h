// generated by Fast Light User Interface Designer (fluid) version 1.0110

#ifndef Activator_h
#define Activator_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Button.H>
#include "../SoundControl.h"
#include <FL/Fl_Text_Editor.H>
#include <FL/Fl_Return_Button.H>

class Activator {
public:
  Activator(Fl_Text_Buffer *buf);
private:
  Fl_Window *fWindow;
public:
  Fl_Check_Button *fKeyCondition;
private:
  void cb_fKeyCondition_i(Fl_Check_Button*, void*);
  static void cb_fKeyCondition(Fl_Check_Button*, void*);
public:
  Fl_Input *fCondKeyId;
  Fl_Input *fCondOwnerKeyId;
  Fl_Input *fCondKeyDescr;
  Fl_Input *fInhibit;
  Fl_Input *fMinLevel;
  Fl_Input *fMaxLevel;
  Fl_Check_Button *fSpawn;
private:
  void cb_fSpawn_i(Fl_Check_Button*, void*);
  static void cb_fSpawn(Fl_Check_Button*, void*);
public:
  Fl_Choice *fMonsterLevel;
  Fl_Choice *fSoundeffect;
private:
  void cb_Test_i(Fl_Button*, void*);
  static void cb_Test(Fl_Button*, void*);
public:
  Fl_Choice *fObject;
  Fl_Choice *fJellyBlock;
  Fl_Check_Button *fAddKey;
private:
  void cb_fAddKey_i(Fl_Check_Button*, void*);
  static void cb_fAddKey(Fl_Check_Button*, void*);
public:
  Fl_Input *fKeyDescr;
  Fl_Input *fKeyId;
  Fl_Choice *fKeyPicture;
  Fl_Check_Button *fBroadcast;
private:
  void cb_fBroadcast_i(Fl_Check_Button*, void*);
  static void cb_fBroadcast(Fl_Check_Button*, void*);
public:
  Fl_Input *fBlocks;
private:
  void cb_Ok_i(Fl_Return_Button*, void*);
  static void cb_Ok(Fl_Return_Button*, void*);
public:
  bool fOk; 
};
#endif
